// Класс Person
public class Person {
    private String name;
    private int age;
    private Pet pet;

    // Конструктор с аннотацией @Autowired
    @Autowired
    public Person(String name, int age, Pet pet) {
        this.name = name;
        this.age = age;
        this.pet = pet;
    }

    // Геттеры и сеттеры
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public Pet getPet() {
        return pet;
    }

    public void setPet(Pet pet) {
        this.pet = pet;
    }
}

// Класс Pet
public abstract class Pet {
    private String name;

    // Конструктор с аннотацией @Value
    @Value("${pet.name}")
    public Pet(String name) {
        this.name = name;
    }

    // Геттер и сеттер
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    // Абстрактный метод для издания звука
    public abstract void makeSound();
}

// Класс Dog, наследующий от Pet
public class Dog extends Pet {

    // Конструктор с аннотацией @Value
    @Value("${dog.name}")
    public Dog(String name) {
        super(name);
    }

    // Переопределение метода makeSound()
    @Override
    public void makeSound() {
        System.out.println("Гав-гав!");
    }
}
